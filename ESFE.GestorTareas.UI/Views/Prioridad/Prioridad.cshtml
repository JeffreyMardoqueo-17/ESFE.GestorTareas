
@{
    ViewData["Title"] = "Prioridad Page";
}

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container mx-4">
    <div class="row justify-content-center">
        <div class=" col-12 d-flex">
            <div class="card shadow">
                <div class="card-header bg-black text-white text-center">
                    <h2 class="card-title" style="margin-right: 85px; margin-top: 20px;">Lista de Prioridad</h2>
                </div>
                <div class="card-body bg-pink">
                    <div class="text-center mb-3">
                        <button class="btn btn-success" id="btnNuevo"> <i class="bi bi-stopwatch"></i> Añadir Prioridad</button>
                    </div>
                    <table class="table table-bordered table-striped" id="tbPrioridad">
                        <thead>
                            <tr>
                                <th>Prioridad</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1">
    <div class="modal-dialog modal'lg'">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white ">
                <h5 class="modal-title">Detalle Prioridad</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="txtId" value="0" />
                <div class="mb-3">
                    <label for="txtNombre" class="form-label">Prioridad</label>
                    <input type="text" class="form-control" id="txtNombre" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnGuardar"> <i class="bi bi-save"></i> Guardar</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal"> <i class="bi bi-x-circle"></i> Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script>

        const Modelo_base = {
            id: 0,
            nombre: "",
        }

        $(document).ready(() => {

            listaPrioridades();
        })

        function mostrarModal(modelo) {

            $("#txtId").val(modelo.id);
            $("#txtNombre").val(modelo.nombre)

            $('.modal').modal('show');

        }

        //ABRIR UN NUEVO MODAL DE EDICIÓN
        $("#btnNuevo").click(() => {

            mostrarModal(Modelo_base);
        })
        //GUARDA LOS CAMBIOS DENTRO DEL MODAL DE EDICION
        $("#btnGuardar").click(() => {
            let NuevoModelo = Modelo_base;

            NuevoModelo["id"] = $("#txtId").val();
            NuevoModelo["nombre"] = $("#txtNombre").val();

            const nombre = NuevoModelo["nombre"].trim();

            if (nombre === "") {
                alert("El campo de prioridad no puede estar vacío.");
                return
            }

            //COMPRUEBA SI EL CAMPO ID TIENE EL VALOR "0"
            if ($("#txtId").val() == "0") {
                fetch("Prioridad/Insertar", {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json;charset=utf-8'
                    },
                    body: JSON.stringify(NuevoModelo)
                })
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response)
                    })
                    .then((dataJson) => {

                        if (dataJson.valor) {
                            alert("Prioridad registrada.");
                            $('.modal').modal('hide');
                            listaPrioridades();
                        }
                    })
            }
            //SI EL CAMPO ID NO TIENE EL VALOR DE "0" SIGNIFICA QUE SE ESTÁ EDITANDO UNA CATEGORIA EXISTENTE
            else {
                fetch("Prioridad/Actualizar", {
                    method: "PUT",
                    headers: {
                        'Content-Type': 'application/json;charset=utf-8'
                    },
                    body: JSON.stringify(NuevoModelo)
                })
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response)
                    })

                    .then((dataJson) => {

                        if (dataJson.valor) {
                            alert("Prioridad Editada.");
                            $('.modal').modal('hide');
                            listaPrioridades();
                        }
                    })
            }

        })

        //FUNCIÓN PARA OBTENER DATOS

        function listaPrioridades() {

            fetch("Prioridad/Lista")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response)
                })
                .then((dataJson) => {

                    $("#tbPrioridad tbody").html("");

                    dataJson.forEach((item) => {

                        $("#tbPrioridad tbody").append(
                            $("<tr>").append(
                                $("<td>").text(item.nombre),
                                $("<td>").append(
                                    $("<button>").addClass("btn btn-primary mx-2 btn-sm btn-editar").data("modelo", item).html('<i class="fas fa-edit"></i> Editar'),
                                    $("<button>").addClass("btn btn-danger btn-sm btn-eliminar").data("id", item.id).html('<i class="fas fa-trash"></i> Eliminar')
                                )

                            )
                        )
                    })
                })
        }

        //FUNCION PARA EDITAR LOS DATOS

        $("#tbPrioridad tbody").on("click", ".btn-editar", function () {
            let prioridad = $(this).data("modelo")

            mostrarModal(prioridad)
        })

        //FUNCION PARA ELIMINAR LOS DATOS

        $("#tbPrioridad tbody").on("click", ".btn-eliminar", function () {
            let id = $(this).data("id")

            let resultado = window.confirm("¿Desea eliminar la prioridad?");

            if (resultado) {

                fetch("Prioridad/Eliminar?id=" + id, {
                    method: "DELETE"
                })
                    .then((response) => {
                        return response.ok ? response.json() : Promise.reject(response)
                    })
                    .then((dataJson) => {

                        if (dataJson.valor) {
                            listaPrioridades();
                        }
                    })
            }
        })

    </script>
 }


